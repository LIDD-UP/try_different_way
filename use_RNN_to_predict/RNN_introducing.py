#-*- coding:utf-8 _*-  
""" 
@author:Administrator
@file: RNN_introducing.py
@time: 2018/7/30
"""
'''
神经网络：输入x得到y；
也就是样本与样本之间是独立的（IID数据）

序列数据不满足IID：
序列生成，如语言翻译，西东文本生成；
内容提取（content Extraction) 如图像描述）

视频，语音，文本，图像；
序列样本：
rnn不经能够处理序列输入，也能得到序列的输出，这里序列值得是向量的序列；
RNN学习出来的程序（状态机），不是函数；

one to one 
one to many
many to one many to many 

典型的一到多的问题：one to many 如一个图像的输入，一行描述性文字的输出；（文本序列）

文本输入然后分类；多到1的问题；

多到多：

预测问题可以看成多到多也可以看成是多到一的问题；

many to many :图像到文字；

首先映射成什么形态；

做生成模型：


递归神经网络：
普通的神经网络：第一个网络对第二个网络没有影响：
网络再走的过程中

输入有两个：一个时上一层的，然后是本层的输入；
RNN 递归神经网络：

通常我们是只要最后一个输入；中间的输出经常会舍弃：

自然语言处理中；

递归的神经网络反向传播的过程：
    递归神经网络中只要能走的地方都需要求偏导；
rnn的一些问题：离得越近的关系越好；
网络输入太大了，容易出现梯度消失的问题；
使用链式法则累成再一起很容易产生梯度消失的问题：
1让他记住一部分信息；防止梯度消失：

解决的问题：二进制的加法：

长短期网络：
控制参数：决定什么样的信息会被保留：什么样的会被遗忘：

sigmoid 把输入压缩到【0，1】上；
们单元；
有遗忘的信息就有保留的信息：


'''