Code review procedure
    1:关于cnn预测模型的重构
    关于cnn模型的知识：
    1：分为三层，卷积层，池化层，全连接层，卷积层和池化层可以有多层，
    1:cnn最重要的一步就是要将输入的形状reshape成一个三维的数据形式，通常是一个正方形一般这样[-1,x,x,1]这样的形式；
    存在的问题：
        1：padding的作用
        2：stride的作用：
        3：为什么要reshape成正方形；
        4：还有weight的形成方式和计算方法
        5：bias的生成规则和计算方法
        6：tf.conv2d 的计算方法；（矩阵计算）
        7：池化的计算方法和作用，对原始矩阵有什么影响，好像这个还要影响weight的生成；
        8：池化中ksize和stride，padding的相互联系和设置方式；
        9：对于多层的卷积应该怎样设置，卷积层的设置方法；多层卷积的作用；
        10：全连接层的设计规则和矩阵应该遵循的设计方案；全连接层的作用
        python 单下划线和双下划线：类似于java中的protect 和 private

        一次卷积和池化过程包括
            1：卷积
            2：池化
            3：dropout
            4：全连接层

        由于对rnn不熟悉，先暂停对cnn得重构，
        rnn也暂停重构；先把神经网络系统的学习一遍之后在进行重构；


        对ML进行重构：
            遇到第一个问题就是项目模块化得问题：
            python项目下得根py文件，就算把项目下加上__init__.py文件也无法导入（在命令行下无法导入，但是在pycharm中就可以导入，
            这个问题暂时无法解决：
            但是在更目录下得模块就能导入，很奇怪，拿到还要在创建一个package专门获取根路径？
            而且，无论在根目录下创部创建__init__.py 文件，根目录下得模块都能导入；

        此处需要注意os.getcwd()是获取系统工作目录，而os.path.dirname(os.path.abspath(__file__)是文件目录；

        对于机器学习的框架都是调用的sklearn包，只需要进行fit data就行了；还有就是之前一部分的数据处理部分
        ：可以设计成三部分函数：
            1：数据处理
            2：数据转换
            3：训练
                交叉验证，
            4：预测
            5：数据可是化
            6：结果保存；
